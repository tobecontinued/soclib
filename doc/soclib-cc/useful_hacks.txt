
Useful hacks
------------

In platform description file, you may want to instanciate many
components with the same parameters (vci params for instance).
As platform description is a python file, you can use as many local
variables as you want. You can also use dictionnary-based argument
passing, and factorize your arguments. Let's have an example:

When declaring use for a basic VCI component, you must pass 10
parameters:
cell_size, plen_size, addr_size, rerror_size, clen_size, rflag_size,
srcid_size, pktid_size, trdid_size, wrplen_size.

On `Uses' line, this makes:

Uses( 'vci_locks', cell_size = 4, plen_size = 3, addr_size = 32,
      rerror_size = 2, clen_size = 3, rflag_size = 3, srcid_size = 3,
      pktid_size = 4, trdid_size = 3, wrplen_size = 4 )

Those 10 parameters may be put in a dictionnary:
vci_params = dict(
	cell_size = 4,
	plen_size = 3,
	addr_size = 32,
	rerror_size = 2,
	clen_size = 3,
	rflag_size = 3,
	srcid_size = 3,
	pktid_size = 4,
	trdid_size = 3,
	wrplen_size = 4
	)

Then, previous instanciation is exactly equivalent to this one:
Uses( 'vci_locks', **vci_params )

The big difference is you can reuse variable vci_params ad lib.


If you have to put another parameter together with vci_params, you
must put the **vci_params _after_ all others:

Uses( 'vci_vgmn', nb_initiat = 3, nb_target = 2, min_latency = 10,
      fifo_depth = 5, **vci_params),
