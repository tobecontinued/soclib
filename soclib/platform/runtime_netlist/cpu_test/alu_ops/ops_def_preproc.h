
#define imp_add(a, b) ((a)+(b))
#define imp_sub(a, b) ((a)-(b))
#define imp_and(a, b) ((a)&(b))
#define imp_or(a, b) ((a)|(b))
#define imp_xor(a, b) ((a)^(b))
#define imp_mul(a, b) ((a)*(b))
#define imp_mod(a, b) ((a)%((b)+1))
#define imp_div(a, b) ((a)/(b))
#define imp_sll(a, s) ((a)<<(s))
#define imp_srl(a, s) ((a)>>(s))
#define imp_mklemask(n) ((n)==(8*sizeof(data_t))?((data_t)-1):((((data_t)1)<<(n))-1))
#define imp_sign_ext8(a) ((data_t)(int32_t)(int8_t)(a))
#define imp_sign_ext16(a) ((data_t)(int32_t)(int16_t)(a))
#define imp_rotl(a, s) (((a)<<(s))|((a)<<(32-(s))))
#define imp_rotr(a, s) (((a)<<(s))|((a)>>(32-(s))))
#define imp_extract(a, le, size) (((a)>>(le))&imp_mklemask(size))
#define imp_mkmask(high, low) (imp_mklemask(high)^imp_mklemask(low))
#define imp_insert(a, to_ins, le, size) (((imp_mkmask(size, 0)&(to_ins))<<le)|(~imp_mkmask(le+size, le)&a))
#define imp_extract_15_8(a) imp_extract(a, 15, 8)
#define imp_insert_15_8(a, ti) imp_insert(a, ti, 15, 8)

#define imp_swap_16(a) ((((a)>>8)&0xff)|(((a)&0xff)<<8))
#define imp_swap_32(a) ((((a)&0xff)<<24)|(((a)<<8)&0xff0000)|(((a)>>8)&0xff00)|(((a)&0xff000000)>>24))
#define imp_swap_64(a) ((imp_swap_32(a)<<32)|imp_swap_32((a)>>32))

#define pp_imp_swap_16(a) imp_swap_16(a)
#define pp_imp_swap_32(a) imp_swap_32(a)
#define pp_imp_swap_64(a) imp_swap_64(a)
