OUTPUT_ARCH(ARM)

MEMORY
{   
    m_ahbb0      :   org = 0x08000000,     len = 0x08000000
    m_ahbu0      :   org = 0x10000000,     len = 0x10000000
    m_ahbb1      :   org = 0x20000000,     len = 0x10000000
    m_ahbu1      :   org = 0xf0000000,     len = 0x10000000
    m_firm       :   org = 0xffff0000,     len = 0x00010000
    m_rom_excep  :   org = 0xf0000000,     len = 0x00002000
    m_rom_code   :   org = 0xf0002000,     len = 0x03ffe000

    m_excep      :   org = 0x00000000,     len = 0x00002000
    m_code       :   org = 0x00002000,     len = 0x03ffe000

}

__data_mem_start = 0x04000000;
__data_mem_end   = 0x08000000;
__data_mem_size  = 0x04000000;
__stack_start    = __data_mem_end;
__stack_size     = 0x00000100;
__stack_end      = __stack_start - __stack_size;

SECTIONS
{   
    .text_excep : 
    {   
        __textEXCEP_rom_start = LOADADDR(.text_excep);
        __textEXCEP_start = .;
        /* CREATE_OBJECT_SYMBOLS */
        *(.textEXCEP)
        __textEXCEP_end = .;
        __textEXCEP_size = SIZEOF(.text_excep);
    } > m_excep

    .text_code : 
    {   
        __textCODE_rom_start = LOADADDR(.text_code);
        __textCODE_start = .;
        /* CREATE_OBJECT_SYMBOLS */
        __textARM32CODE_start = .;
        *(.textCODE)
        main.o(.text)
        __textARM32CODE_end = .;
        __textCODE_end = .;
        __textCODE_size = SIZEOF(.text_code);
    } > m_code

}

ENTRY(_start);
