# -*- python -*-

#locs = {}
#execfile('mutekh/.config.py', {}, locs)

#use_memcheck = (
#  "CONFIG_SOCLIB_MEMCHECK" in locs and
#  locs["CONFIG_SOCLIB_MEMCHECK"] == 'defined')

#if locs['CONFIG_CPU_PPC'] == 'defined':
#  cpu = "ppc405"
#elif locs['CONFIG_CPU_ARM'] == 'defined':
#  cpu = "arm"
#elif locs['CONFIG_CPU_MIPS'] == 'defined':
#  if locs['CONFIG_CPU_ENDIAN_BIG'] == 'defined':
#    cpu = 'mips32eb'
#  else:
#    cpu = 'mips32el'
#else:
#  raise ValueError('No suitable cpu found in mutekh configuration')

cpus = [ "ppc405", "arm", 'mips32eb', 'mips32el' ]
use =  [
	Uses('caba:vci_locks'),
	Uses('caba:vci_ram'),
	Uses('caba:vci_heterogeneous_rom'),
	Uses('caba:vci_multi_tty'),
	Uses('caba:vci_xicu'),
	Uses('caba:vci_block_device'),
	Uses('caba:vci_vgmn'),
        Uses('common:elf_file_loader'),
        ]

for i in cpus:
    use.append(Uses('caba:vci_xcache_wrapper', iss_t = 'common:gdb_iss', gdb_iss_t = 'common:iss_memchecker', iss_memchecker_t = 'common:'+i))
    use.append(Uses('caba:vci_xcache_wrapper', iss_t = 'common:iss_memchecker', iss_memchecker_t = 'common:'+i))
    use.append(Uses('caba:vci_xcache_wrapper', iss_t = 'common:gdb_iss', gdb_iss_t = 'common:'+i))
    use.append(Uses('caba:vci_xcache_wrapper', iss_t = 'common:'+i))

todo = Platform('caba', 'top.cc',
        uses=use,
	cell_size = 4,
	plen_size = 9,
	addr_size = 32,
	rerror_size = 1,
	clen_size = 1,
	rflag_size = 1,
	srcid_size = 8,
	pktid_size = 1,
	trdid_size = 1,
	wrplen_size = 1
)
